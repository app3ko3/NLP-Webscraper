https://marvelmind.com/download
 Products Downloads Robots Drones Forklifts People Demos Help About us
Distributors Presentation Customers Users Manual FAQ Forum
Shop
0
Home > Downloads
Downloads
Step 1: Check Operating Manual for starting up with the system
 Operating Manual is your main source of detailed information about Marvelmind Indoor ‚ÄúGPS‚Äù system. Download, study it and follow the recommendations before deploying any Marvelmind system. If anything is unclear, check the Help page.
Another most important manual to start with is the Placement Manual, which in a simple manner explains where and how to place stationary beacons, mobile beacons and the modem for different scenarios: robots, drones, vehicles, people, etc.
Sources of help:
FAQ forum ‚Äì see already answered questions and ask yours
Marvelmind YouTube channel ‚Äì plenty of demo videos and help videos, for example, Marvelmind Starter Set unpacking video
Marvelmind and ArduPilot
Drones dedicated page
Marvelmind and ArduRover
Tutorial ‚Äì an alternative Manual/Help/Tutorial by one of our customers (methylDragon) ‚Äì Thanks! üôÇ
Sensor fusion tutorial and video demo ROS Sensor Fusion with Marvelmind Indoor ‚ÄòGPS‚Äô Beacons by methylDragon;
Help page on Marvelmind system by CloudMesh
C# sample code written by Andrej Kiƒçina. Offered as it is without verification by Marvelmind Robotics. Contact Andrej directly in case needed
Marvelmind List:
Marvelmind Robotics List ‚Äì a list of companies operating in the fields relevant to autonomous robotics and precise indoor positioning
Manuals and Application Notes:
Placement Manual ‚Äì practical advises and examples of how to mount the Marvelmind Indoor ‚ÄúGPS‚Äù system to achieve the best performance
Autonomous copter settings manual ‚Äì practical recommendations for setting up of Indoor ‚ÄúGPS‚Äù system for autonomous copters/drones
PixHawk and Marvelmind Integration Manual ‚Äì step by step guide for PixHawk and Marvelmind integration for drones
Architectures comparison ‚Äì basic explanation of Non-Inverse and Inverse architectures, their use cases and differences between them
Beacons comparison ‚Äì a table summarizing key differences between different types of beacons
Selection Guide ‚Äì a slideset aiming at helping you in creating configuration of Indoor ‚ÄúGPS‚Äù suitable for your particular task and requirements
Network planning and implementation:
Precise indoor positioning ‚Äì planning phase ‚Äì a basic questionnaire we share with potential customers before the project starts
Precise indoor positioning ‚Äì implementation phase ‚Äì steps we do together with customers from the start till the full implementation
Typical costs examples from a small PoC project to a larger warehouse
White papers and trainings:
Indoor navigation & positioning (PDF) ‚Äì review and comparison of industrial indoor positioning technologies and methods
Indoor navigation & positioning (YouTube video) ‚Äì video based on the PDF above with additional insights
Solutions:
Why Marvelmind
Indoor GPS
Ultrasound RTLS
UWB basics
What is more accurate than UWB?
What is better than BLE for indoor positioning system?
Outdoor local positioning system
What is RTLS
Use cases:
Autonomous robots and AGVs indoor and outdoor
Swarm robotics
Autonomous drones and drone tracking indoor and outdoor
Precise tracking of drones indoor
Precise tracking of drones outdoor
Precise tracking of micro-drones indoor
Tracking of vehicles/forklifts indoor and outdoor
Precise people in warehouses, factories, plants, construction sites
Precise people tracking in museums, exhibitions
Precise tracking of racing boats
Autonomous boats without GPS
Docking of ships to the automatic charging station
Autonomous docking of small boats to the main ship
Precise tracking of huge bridge crane and its hook
Precise tracking of the cranes for residential construction site
Precise tracking of the bucket of the excavator
Patients rehabilitation after operations
How to:
How indoor positioning systems work
How to create indoor navigation maps
How to increase location update rate and reduce latency?
How to increase accuracy of precise indoor positioning system
How to get direction/orientation
How to build maps larger than 30x30m
How to build large indoor positioning systems
Line of sight is a must for precise indoor positioning systems
8 basic steps from unpacking to autonomous drive/flight
Coordinate systems and absolute vs. relative accuracy
Power supply options for beacons
Shorts:
How to track people indoor
Other useful photos, PDFs, STLs, STEPs, archives:
Marvelmind products photos ‚Äì many photos of different Marvelmind Robotics‚Äô products in high resolution ‚Äì ZIP archive
Marvelmind products documentation ‚Äì Marvelmind products‚Äô dimensions, mounting holes in several formats (PDF, STEP, STL, PNG) ‚Äì ZIP archive
Step 2: Install STM driver
Download and install STM32 driver on your computer once
The driver is required on your computer in order for the processors used in beacons and modems to be visible in Windows. Linux already has it. Thus, you don't have to install it
Download and install DfuSe programmer on your computer once
The DfuSe programmer is required, if you decide to upload the DFU SW.
‚Äì DfuSe v3.0.6: https://marvelmind.com/pics/en.stsw-stm32080_v3.0.6.zip
‚Äì DfuSe v3.0.5: https://marvelmind.com/pics/DfuSe_Demo_V3.0.5_Setup.zip
  Try different versions, if needed, depending on your Windows vs DfuSe combination.
Step 3: Download and install the latest stable SW and API
Download the latest SW pack
This is the main SW pack required for any Marvelmind hardware. The pack also includes the API. The latest SW pack is a minor SW release v7.040. It contains the SW for all Marvelmind beacons and modems except for Super-Modem. For Super-Modems use a separate SW file.
Minor SW release v7.040 (20.Feb.2022):
‚Äì The main change in the release is an introduction of support of 8 ultrasound frequencies: 19kHz, 22kHz, 25kHz, 28kHz, 31kHz, 34kHz, 37kHz, 45kHz. Previously, the system could have up to 5 ultrasound frequencies: 19kHz, 25kHz, 31kHz, 37kHz, 45kHz
‚Äì Introduction of new frequencies greatly simplifies deployment and greatly improves the performance of complex indoor positioning systems with complex maps of stationary beacons, where ultrasound frequency reuse could quickly become a major headache for network planning. The lack of available ultrasonic frequencies in neighboring submaps would lead to a need for TDMA between the timeslots of the submaps. In its turn, the need for TDMA would lead to the location update rate reduction
‚Äì Additional frequencies also help with avoidance of potential interference with other ultrasound devices in your robot, for example, with sonars. Usually, they work on 40kHz, i.e. no problems, but there could be some variants. Thus, more frequencies ‚Äì more freedom and more options
‚Äì Super-Beacons with frequencies are fully available too
‚Äì Super-MP set came previously with 5 frequencies and no variation. Now, the set will come with 5 frequencies out of 8 frequencies available. If you want a particular set of frequencies for your Super-MP, let us know during the order
‚Äì 8 frequencies are fully supported in IA and NIA. MF NIA has a limited support now: only 5 frequencies of 8 available, but new frequencies from the list of 8 frequencies are already supported. Support of all 8 frequencies in MF NIA will come in the coming releases
 Changes and improvements:
‚Äì Several minor improvements and bug fixes
API can be found inside the Marvelmind SW pack as a subfolder. Download API
Download Super-Modem SW
Required for Super-Modem only - the latest stable SD-card image and HEX file for Super-Modem. It is separate from the main SW pack, because of its large size - the SD card image (1Gb)
Download SW for Robot v100
The latest SW pack for Robot v100 (1.8Gb)
The most basic requirements
Always use SW from the same pack only: Dashboard SW + Modem SW + Beacon SW
Don‚Äôt mix SW from different SW packages. If not from the same SW pack, the SW compatibility between the Modem, the Beacons, and the Dashboard SW is not guaranteed
Always press the Default button in the Dashboard, when uploading the SW
See how to update the SW in the Operating Manual
Start with default settings only => remember to press the Default button in the Dashboard, after updating the SW
Check the video about Typical user mistakes and avoid them
SW releases archive
SW update on 08.Feb.2022
SW update on 01.Nov.2021
SW update on 31.Jan.2021
SW update on 21.Oct.2020
SW update on 19.Apr.2020
Step 3: Integrate with your devices
Before you start integrating, please, see and follow our recommendations:
‚Äì 9 basic steps from unpacking to autonomous drive/flight
‚Äì Typical mistakes with Precise Indoor ‚ÄúGPS‚Äù
Download PDF with all Marvelmind interfaces and protocols
All external Marvelmind protocols and interfaces are described in a detailed PDF. The location data can be received from the mobile beacon or from the modem pr from both at the same time, which allow both tracking, remote control or using the location directly on the spot by autonomous robots or drones.
Mobile beacon (‚Äúhedge‚Äù) interfaces
Via virtual UART via USB: Supported interfaces
This is the easiest way to connect since no soldering is required and protocol is the same for different operating systems.
Hedge HW v4.5+ (5 sensors): USB protocol for mobile beacon ‚Äì description of the USB protocol between mobile beacon and a host device for Windows and Linux
Hedge HW v4.4 and earlier (4 sensors): USB protocol for mobile beacon ‚Äì description of the USB protocol between mobile beacon and a host device for Windows and Linux
Via SPI
SPI & UART interface pins on beacon board
Hedge HW v4.5+ (5 sensors): USB protocol for mobile beacon ‚Äì description of the USB protocol between mobile beacon and a host device for Windows and Linux
Mobile beacon (‚Äúhedge‚Äù) libraries
Python library for beacon
Here is the Python code for Linux-based devices integration via virtual UART via USB
Library is easy to use. Also, here is detailed description and example
Code is fairly universal; Tested on:
Ubuntu 16.04
Raspbian Jessie
Mac (OS X 10.10)
Python 2.7 & Python 3+
There are handlers of different exceptions, for example, non-standard states of COM/USB
The Python library provides quick and easy ability for integration of ultrasound navigation system with various Linux-based devices. Among them are Raspberry Pi and other single-board PCs. This code is free to use in your applications (please include a reference link to this web page).
 C library for beacon
Here is the C code + guiding document
Supported operating systems:
Microsoft Windows
GNU/Linux (including Raspberry Pi)
Mac OS X
Additionally, link to Github repository
v2018_04_06:
Improved processor load
Fixed compiling in Visual Studio
Added parsing for Paired Beacons angle
Added parsing for distance raw data
Added parsing for IMU raw data
Added parsing for IMU fusion packet
 Android/Java library for beacon
Here is the Java code and simple Android application
A simple Android app for testing (old by now. Performance not guaranteed)
Tested on:
Samsung S7 (API 25)
Huawei P6 (API 22)
 Mobile beacon (‚Äúhedge‚Äù) integrations
Connection of Marvelmind hedgehog to Arduino via UART and SPI
The detailed description of connection to Arduino shield via UART and SPI is described in:
Hedge HW v4.5+ (5 sensors): the link
Hedge HW v4.4 and earlier (4 sensors): the link
Arduino sample code ‚Äì sending path to robot
Arduino sample code ‚Äì get distances to beacons
Arduino sample code ‚Äì UART interface
Arduino sample code ‚Äì SPI interface
 ROS support for PC and single-board computers including Raspberry Pi
Marvelmind ROS package ‚Äì GitHub link.
Marvelmind ROS package v1.0.11 compatibility and main changes:
Supports receiving telemetry, quality and waypoints data
hedge_rcv_bin allows to specify serial port baudrate in command line
Supported ROS versions:
Noetic for Ubuntu 20.04
Melodic for Ubuntu 18.04
Please, check the instructions on ROS integration.
Hints:
By default UART is not accessible. Use command: sudo chmod 0777 /dev/ttyAMA0 to enable it
Or a more elegant way: Set permissions for serial port by this instruction:http://raspberrypi.stackexchange.com/questions/48211/set-permission-for-dev-ttyama0-on-boot
Set correct UART speed on mobile beacon: Dashboard => Interfaces shall be set to the same speed as hedge_rcv_bin in ROS
Additional hints:
https://www.cube-controls.com/2015/11/02/disable-serial-port-terminal-output-on-raspbian/
http://raspberrypi.stackexchange.com/questions/45570/how-do-i-make-serial-work-on-the-raspberry-pi3
 Pixhawk support and NMEA interface description
First of all, please, see the dedicated Drones page.
See integration with PixHawk on PX4.
Here is a detailed PixHawk and Marvelmind Integration Manual.
Please, also check the instructions on Pixhawk integration and description of interfacing via NMEA0183 protocol.
Forum on PixHawk integration. There are more topics, though. Check the forum
 Sending path to your robot/copter
Here is an explanation how to send path data via mobile beacon to your robot/copter and sample code.
Check a corresponding chapter in the protocol description. Request of writing the movement path
Relevant forum discussion
 Modem and Dashboard interfaces
Protocol of data exchange with modem via USB interface
Protocol description
 The Dashboard software log description
Correct: https://marvelmind.com/pics/marvelmind_interfaces.pdf ‚Äì see a corresponding chapter
Outdated: Forum link or direct link to the image. First column appeared later, and it is discussed in this topic. It is an additional absolute column ‚Äì a timestamp ‚Äì time in milliseconds passed from January,1 of 1970 (UNIX time) ‚Äì Dashboard SW permanently writes coordinates into log file ‚Äòhedgehogs.log‚Äô that is stored into the Dashboard folder
 Data exchange with Dashboard via UDP
UDP protocol description
UDP SW example
Here is the C-written UDP example
Supported operating systems:
Microsoft Windows
GNU/Linux
Supported streaming as well as master-slave mode
PREVIOUS SW VERSION
CONTACTS
Marvelmind O√ú
Ahtri tn 12
Tallinn, 10151
Estonia
Phone: +1 (650) 843-9243
Phone: +372 712 4277
Email: info@marvelmind.com
COMMON
Indoor ‚ÄúGPS‚Äù presentation
Demo videos and tutorials
Robot v100
Pricelist
Distributors
GET STARTED
Operating Manual
Placement Manual
Architectures Comparison
FAQ / Forum
Drones page
Marvelmind List
DOWNLOADS
Marvelmind SW pack
Marvelmind interfaces
PixHawk Integration Manual
OTHER
About us
Payment methods
Shipment
Warranty
Help
Privacy & Cookies Policy