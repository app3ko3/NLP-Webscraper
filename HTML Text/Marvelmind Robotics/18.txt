https://ardupilot.org/copter/docs/common-marvelmind.html
 HOME
DOWNLOADS
COMMUNITY
STORES
ABOUT
Copter
Introducing Copter
AutoPilot Hardware Options
First Time Setup
First Flight and Tuning
If A Problem Arises
Flight Features
Advanced Configuration
Autopilot Output Mapping
AutoTune
Auxiliary Function Switches
Baro Temperature Compensation
Boat mode
Bootloader Update
BLHeli32 and BLHeli_S ESCs
Use as Battery Monitor
Bi-directional DShot
CAN Bus Setup
Compass Setup (Advanced)
Compass-less Operation
Current Limiting and Voltage Scaling
EKF (Extended Kalman Filter)
EKF Affinity & Lane Switching
EKF Sources and Selection
Fence Failsafes
Flight Time Recorder
FPort Setup
GPIOs
GPS for Yaw (aka Moving Baseline)
GPS for Altitude
GPS/Non-GPS Transitions
Ground Control Station Only Operation
Ground Effect Compensation
In-Flight FTT and filter control
IMU Temperature Calibration
Independent Watchdog
Limit Cycle Prevention
LUA Scripting
Magnetic Interference
MAVLink2 Packet Signing (Security)
Motor Thrust Scaling
Moving Vehicle Initialization
Multiple Radio Control Receivers
Non-GPS Navigation
Intel RealSense T265
MarvelMind Beacons
Required Hardware
Marvelmind Settings
Connecting to a autopilot
Ground Testing
DataFlash logging
Nooploop Beacons
Optical Flow
OptiTrack motion capture system
Pozyx Beacons
ROS with Google Cartographer (Developers only)
Vicon Positioning System
Visual Odometry with OpenKai and ZED
GPS/Non-GPS Transitions
Notification Devices (LEDs,Buzzer,etc.)
Notch Filter Configuration
Object Avoidance
Optical Flow Sensor
OSD Parameter Editor
Parameter List (Full)
Parameter Reset
RC Input Channel Mapping (RCMAP)
RC Options
Redundant Telemetry
RunCam Camera Configuration and Control
Sensor Position Offset Compensation
Sensor Testing
Serial Port to Port Passthrough
Serial Port Configuration
Surface Tracking
Telemetry Port Setup
Terrain Following (Autonomous modes)
Tuning
DroneCAN Setup
Video Transmitter Control
UBlox GPS Configuration
Windspeed Estimation and Baro Compensation
Mission Planning
Logs
Peripheral Hardware
OEM Customization
Traditional Helicopters
Tricopter
SingleCopter and CoaxCopter
HeliQuads
SkyRocket
Solo
Reference Frames
Use-Cases and Applications
Antenna Tracking
Simulation
Upcoming Features
User Alerts
Appendix
Full Table of Contents

Individual
Partners
SWAG Shop
  Docs » Flight Features » Non-GPS Navigation » Marvelmind for Non-GPS navigation
Edit on GitHub
Marvelmind for Non-GPS navigation
This article explains how a MarvelMind system can be as a short-range substitute for a GPS allowing position control modes like Auto and Guided. See the user manual for more details on the system.
Note
Support was added in Copter-3.6 and Rover-3.3. This wiki page is a work-in-progress.
image courtesy of marvelmind.com
Required Hardware
Marvelmind Starter Set
Marvelmind Settings
Ensure the Marvelmind is firmware version 5.77 (or higher) and enable the ‘Raw Distances Data’ in the Dashboard
Set the stationary beacon with the lowest address as the origin in your dashboard.
The height of every stationary beacon, from the ground, must be set on the dashboard.
The hedge should be set to output Marvelmind Protocol at baud rate of 115200.
Connecting to a autopilot
Ensure that Copter-3.6 (or higher) or Rover-3.3 is loaded onto the autopilot and connect with a Ground Station (i.e. Mission Planner).
Enable the EKF3 as described here
Set EK3_ALT_SOURCE to 3 (means using Marvelmind for altitude)
Set EK3_GPS_TYPE to 3 (means Inhibit GPS use)
Set BCN_TYPE to 2 (means using Marvelmind system)
Set BCN_LATITUDE, BCN_LONGITUDE and BCN_ALT to match your actual location. Getting these values exactly correct is not particularly important although getting it close is required in order for the compass’s declination to be correctly looked up from the small database held within ArduPilot.
Set BCN_ORIENT_YAW to the heading from the origin beacon to the 2nd beacon. One way to capture this value is to stand at the origin holding the vehicle so that it’s nose points towards the second beacon. Read the vehicle’s heading from the HUD and enter this value into BCN_ORIENT_YAW
Set GPS_TYPE to 0 to disable the GPS
Set ARMING_CHECK to -9 to disable the GPS arming check
Set SERIAL1_BAUD to 115 to set telemetry1’s baud rate to 115200 (if using Telem2 set SERIAL2_BAUD instead)
Set SERIAL1_PROTOCOL to 13 to enable receiving data from the marvelmind (If using Telem2 set SERIAL2_PROTOCOL instead)
Set BRD_SER1_RTSCTS to 0 to ensure telem1 does not use flow control (If using Telem2 set BRD_SER2_RTSCTS instead, not required if using Serial4/5)
Ground Testing
Connect the Autopilot to a ground station
Click on ‘freeze map’ on the dashboard
After about 1 minute the vehicle’s position should jump to the latitude, longitude you input during the configuration step (above)
Check that the vehicle’s position is relatively stable (i.e. moving around less than one meter)
Walk the vehicle around between the beacons and ensure that its position on the map updates correctly
DataFlash logging
The distance to the beacons can be found in the dataflash log’s BCN message’s D0, D1, D2, D3 fields.
Next
Previous
Questions, issues, and suggestions about this page can be raised on the forums. Issues and suggestions may be posted on the forums or the Github Issue Tracker.
© Copyright 2021, ArduPilot Dev Team.